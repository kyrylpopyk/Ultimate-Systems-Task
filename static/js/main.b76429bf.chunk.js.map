{"version":3,"sources":["Components/Auth/Login/Login.module.css","Components/Auth/Register/Register.module.css","Components/Header/Header.module.css","Components/Board/Board.module.css","Components/Board/ToDoList/ToDoList.module.css","Components/Library/AuthForm.style.js","Components/Auth/Login/Login.js","api/instance/authInstance.js","api/userApi.js","redux/reducers/userReducer.js","hoc/withAuthRedirect.js","redux/selectors/userSelectors.js","Components/Auth/Login/LoginContainer.js","Components/Auth/Register/Register.js","Components/Auth/Register/RegisterContainer.js","Components/Auth/AuthRouter.js","hoc/withNoAuthRedirect.js","Components/Board/ToDoList/ToDoList.js","redux/selectors/boardSelectors.js","api/instance/boardInstance.js","api/boardApi.js","redux/reducers/boardReducer.js","Components/Board/ToDoList/ToDoListContainer.js","Components/Board/Board.js","Components/Board/BoardContainer.js","Components/Board/BoardRouter.js","Components/Header/Header.js","Components/Header/HeaderContainer.js","Components/Library/AppContainer.style.js","Components/App.js","redux/store.js","index.js"],"names":["module","exports","AuthForm","styled","div","props","backgroundColor","width","height","columns","rows","LoginForm","useState","login","setLogin","password","setPassword","className","style","loginForm","value","type","name","placeholder","onChange","e","target","component","onClick","getUser","loginBtn","additional","to","loginCreate","Login","loginTitle","instance","axios","baseURL","userApi","post","identifier","then","response","data","username","email","SET_USER","SET_FETCHING","SET_IS_AUTH","RESET_USER_REDUCER","initialState","isAuth","user","isFetching","setUser","body","setFetchng","fetching","userReducer","state","action","mapStateToProps","withAuthRedirect","Component","connect","userSelectors","getIsAuth","getIsFetching","compose","dispatch","localStorage","setItem","jwt","RegisterForm","setUsername","setEmail","repeatPassword","setRepeatPassword","registerForm","createUser","submit","registerBtn","Register","history","useHistory","backBtn","push","alt","backImage","src","process","registerTitle","AuthRouter","exact","path","LoginContainer","RegisterContainer","ToDoList","setChangeTaskId","id","RenderTasks","tasks","map","task","taskCheckBox","isDone","newListData","JSON","parse","stringify","openList","setOpenList","setTaskStatus","taskCheckBoxEmpty","taskCheckBoxActive","taskTitle","changeTaskId","taskTitleInput","taskId","newTitle","setNewTitle","autoFocus","onBlur","taskTitleContent","indexOf","toDoList","title","titleContent","length","newTaskStorage","tasksActionsBtns","tasksCancelBtn","tasksAddBtn","addNewTask","toDoListActionsBtns","toDoListCancelBtn","setIsOpenList","toDoListSaveBtn","updateList","boardSelectors","getToDoList","board","toDoLists","getIsOpenList","isOpenList","getChangeListId","changeListId","getSortBy","sortBy","getOpenList","getChangeTaskId","getNewTaskStorage","configuration","headers","Authorization","getItem","boardApi","get","params","_sort","catch","console","log","changedList","put","listData","listId","delete","SET_LISTS","SET_IS_FETCHING","SET_IS_OPEN_LIST","SET_OPEN_LIST","UPDATE_LIST_BY_ID","SET_CHANGE_TASK_ID","SET_NEW_TASK_SORAGE","SET_NEW_LIST","SET_CHANGE_LIST_ID","REMOVE_LIST","SET_SORT_BY","RESET_BOARD_REDUCER","actualSort","boardReducer","list","concat","filter","openListData","ToDoListComponent","this","React","setNewTaskStorage","newTaskData","Board","sortOptions","sortOptionsView","created_at","curUpdatingListName","setCurUpdatingList","isUpdating","setIsUpdating","isOpen","setOpen","RenderLists","onDoubleClick","listName","setChangeListId","startUpdatingListName","listNameContentInput","listForChange","listNameContent","listCreationDate","split","listTaskTypes","listTaskComplited","listTaskUncomplited","listTaskAll","removeList","setSort","setsortBy","getLists","content","filters","search","sort","sortText","sortImg","additionalOpenSortImage","additionalOpenSortOptions","sortOption","sortOptionContent","lists","boardAdd","createNewList","boardAddImg","ToDoListContainer","BoardComponent","removeListById","BoardRouter","BoardContainer","Header","header","loginStatus","resetUserReducer","resetBoardReducer","HeaderComponent","setIsAuth","AppContainer","App","HeaderContainer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b76429bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginTitle\":\"Login_loginTitle__3WxRD\",\"loginForm\":\"Login_loginForm__1CQHu\",\"additional\":\"Login_additional__luoo0\",\"loginBtn\":\"Login_loginBtn__2sjBL\",\"loginCreate\":\"Login_loginCreate__8MHTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerTitle\":\"Register_registerTitle__2A8Dv\",\"registerForm\":\"Register_registerForm__3gvUW\",\"additional\":\"Register_additional__3KsQR\",\"registerBtn\":\"Register_registerBtn__31ydd\",\"loginCreate\":\"Register_loginCreate__3orPP\",\"backImage\":\"Register_backImage__216KV\",\"backBtn\":\"Register_backBtn__3eEoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2MkCy\",\"title\":\"Header_title__-ZE9x\",\"loginStatus\":\"Header_loginStatus__FuNuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__K7dH1\",\"filters\":\"Board_filters__1Du4Q\",\"search\":\"Board_search__3WvBE\",\"sort\":\"Board_sort__2aRoG\",\"sortText\":\"Board_sortText__hkAOn\",\"sortImg\":\"Board_sortImg__lzcXW\",\"sortOptions\":\"Board_sortOptions__cCtww\",\"sortOption\":\"Board_sortOption__38pkf\",\"sortOptionContent\":\"Board_sortOptionContent__1Omoo\",\"additionalOpenSortImage\":\"Board_additionalOpenSortImage__3QmI8\",\"additionalOpenSortOptions\":\"Board_additionalOpenSortOptions__1iUDE\",\"lists\":\"Board_lists__RrLM0\",\"list\":\"Board_list__2oCI1\",\"listName\":\"Board_listName__XRUUF\",\"listNameContent\":\"Board_listNameContent__RDD44\",\"listNameContentInput\":\"Board_listNameContentInput__1It9o\",\"listCreationDate\":\"Board_listCreationDate__2qYPy\",\"listTaskTypes\":\"Board_listTaskTypes__27lyT\",\"removeList\":\"Board_removeList__1P_Ik\",\"boardAdd\":\"Board_boardAdd__DKmCy\",\"boardAddImg\":\"Board_boardAddImg__2Al3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoList\":\"ToDoList_toDoList__3pDwD\",\"title\":\"ToDoList_title__1D7ha\",\"titleContent\":\"ToDoList_titleContent__mxjbD\",\"tasks\":\"ToDoList_tasks__MKmtT\",\"task\":\"ToDoList_task__1tDMt\",\"taskCheckBox\":\"ToDoList_taskCheckBox__xyeld\",\"taskCheckBoxEmpty\":\"ToDoList_taskCheckBoxEmpty__27Jxs\",\"taskCheckBoxActive\":\"ToDoList_taskCheckBoxActive__36Phw\",\"taskTitle\":\"ToDoList_taskTitle__1utlq\",\"taskTitleContent\":\"ToDoList_taskTitleContent__2l3PJ\",\"taskTitleInput\":\"ToDoList_taskTitleInput__ei-0G\",\"tasksActionsBtns\":\"ToDoList_tasksActionsBtns__K3fVq\",\"tasksCancelBtn\":\"ToDoList_tasksCancelBtn__1Iqh2\",\"tasksAddBtn\":\"ToDoList_tasksAddBtn__251ML\",\"toDoListActionsBtns\":\"ToDoList_toDoListActionsBtns__31MLb\",\"toDoListCancelBtn\":\"ToDoList_toDoListCancelBtn__2WFrd\",\"toDoListSaveBtn\":\"ToDoList_toDoListSaveBtn__2yoIN\"};","import styled from 'styled-components';\r\n\r\nconst AuthForm = styled.div`\r\n    background-color: ${ props => props.backgroundColor};\r\n    min-width: 400px;\r\n    min-height: 500px;\r\n    width: ${ props => props.width};\r\n    height: ${ props => props.height};\r\n    justify-self: center;\r\n    align-self: center;\r\n    display: grid;\r\n    grid-template-columns: ${ props => props.columns};\r\n    grid-template-rows: ${ props => props.rows};\r\n`;\r\n\r\nexport default AuthForm;","import AuthForm from \"../../Library/AuthForm.style.js\";\r\nimport style from \"./Login.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst LoginForm = (props) => {\r\n    let [login, setLogin] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    return(\r\n        <div className={style.loginForm}>\r\n            <div>\r\n                <input value={login} type=\"text\" name={\"userName\"} placeholder=\"Email or Username\" onChange={(e) => setLogin(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n                <input value={password} component={\"input\"} type=\"password\" name={\"password\"} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => props.getUser(login, password)} className={style.loginBtn}>Login</button>\r\n            </div>\r\n            <div>\r\n                <span className={style.additional}>or</span>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/auth/register\" className={style.loginCreate}>Create an account</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n    return(\r\n        <AuthForm\r\n            backgroundColor = \"#2D2D2D\"\r\n            columns=\"100%\"\r\n            rows=\"3fr 8fr\">\r\n\r\n            <div className={style.loginTitle}>Login</div>\r\n            <LoginForm getUser={props.getUser}/>\r\n        </AuthForm>\r\n    );\r\n}\r\n\r\nexport default Login;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://recruitment.ultimate.systems/\"\r\n});\r\n\r\nexport default instance;","import instance from \"./instance/authInstance\";\r\n\r\nexport const userApi = {\r\n    loginUser(login, password){\r\n        return instance.post(\"auth/local\", {\r\n            identifier : login,\r\n            password : password\r\n        }).then( (response) => { return response.data});\r\n    },\r\n\r\n    registerUser(username, email, password){\r\n        return instance.post(\"/auth/local/register\", {\r\n            username, email, password \r\n        })\r\n        .then( response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n\r\n","import { userApi } from \"../../api/userApi.js\";\r\n\r\nconst SET_USER = \"SET_USER\";\r\nconst SET_FETCHING = \"SET_FETCHING\";\r\nconst SET_IS_AUTH = \"SET_IS_AUTH\";\r\nconst RESET_USER_REDUCER = \"RESET_USER_REDUCER\";\r\n\r\nlet initialState = {\r\n    isAuth: false,\r\n    user: \"\",\r\n    isFetching: false\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.body,\r\n                isAuth: action.body && true\r\n            }\r\n        case SET_FETCHING:\r\n            return{\r\n                ...state,\r\n                isFetching: action.body\r\n            }\r\n        case SET_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.body\r\n            }\r\n        case RESET_USER_REDUCER:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Actions\r\nconst setUser = (user) => ({type: SET_USER, body: user});\r\nexport const setFetchng = (fetching) => ({type: SET_FETCHING, body: fetching});\r\nexport const setIsAuth = (isAuth) => ({type: SET_IS_AUTH, body: isAuth});\r\nexport const resetUserReducer = () => ({type: RESET_USER_REDUCER});\r\n\r\n//Middleware\r\nexport const getUser = (login, password) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetchng(true));\r\n        userApi.loginUser(login, password)\r\n        .then( data => {\r\n            if(\"jwt\" in data){\r\n                localStorage.setItem(\"token\",data.jwt);\r\n                dispatch(setUser(data.user.username))\r\n            }\r\n            dispatch(setFetchng(false));\r\n        });\r\n    }\r\n}\r\n\r\nexport const createUser = (username, email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetchng(true));\r\n        userApi.registerUser(username, email, password)\r\n        .then( data => {\r\n            debugger;\r\n            if(\"jwt\" in data){\r\n                debugger;\r\n                localStorage.setItem(\"token\",data.jwt);\r\n                dispatch(setUser(data.user.username));\r\n                dispatch(setFetchng(false));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        isAuth: state.user.isAuth\r\n    });\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if(props.isAuth) return <Redirect to=\"/board\" />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","const userSelectors = {\r\n    getUser(state){\r\n        return state.user.user;\r\n    },\r\n    getIsAuth(state){\r\n        return state.user.isAuth;\r\n    },\r\n    getIsFetching(state){\r\n        return state.user.isFetching;\r\n    }\r\n}\r\n\r\nexport default userSelectors;","import { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport { getUser } from \"../../../redux/reducers/userReducer\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport userSelectors from \"../../../redux/selectors/userSelectors\";\r\n\r\nconst LoginComponent = (props) => {\r\n\r\n    return(\r\n        <Login\r\n        isFetching={props.isFetching} \r\n        isAuth={props.isAuth} user={props.user}\r\n        getUser={props.getUser}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        user: userSelectors.getUser(state),\r\n        isAuth: userSelectors.getIsAuth(state),\r\n        isFetching: userSelectors.getIsFetching(state)\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUser}\r\n))(LoginComponent);","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthForm from \"../../Library/AuthForm.style\";\r\nimport style from \"./Register.module.css\";\r\n\r\nconst RegisterForm = (props) => {\r\n    let [username, setUsername] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [repeatPassword, setRepeatPassword] = useState(\"\");\r\n\r\n    const submit = (username, email, password, repeatPassword) => {\r\n        password === repeatPassword && props.createUser(username, email, password);\r\n    }\r\n    \r\n    return(\r\n        <div className={style.registerForm}>\r\n            <div>\r\n                <input onChange={(e) => {setUsername(e.target.value)}} value={username} type=\"text\" name={\"userName\"} placeholder=\"Username\"></input>\r\n            </div>\r\n            <div>\r\n                <input onChange={(e) => {setEmail(e.target.value)}} value={email} type=\"text\" name={\"email\"} placeholder=\"Email\"></input>\r\n            </div>\r\n            <div>\r\n                <input onChange={(e) => {setPassword(e.target.value)}} value={password} type=\"password\" name={\"password\"} placeholder=\"Password\"></input>\r\n            </div>\r\n            <div>\r\n                <input onChange={(e) => {setRepeatPassword(e.target.value)}} value={repeatPassword} type=\"password\" name={\"repeatPassword\"} placeholder=\"Repeat Password\"></input>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => {submit(username, email, password, repeatPassword)}} className={style.registerBtn}>Create</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Register = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const BackToLogin = () =>{\r\n        history.push(\"/auth/login\");\r\n    }\r\n\r\n    return(\r\n        <AuthForm\r\n            backgroundColor = \"#2D2D2D\"\r\n            columns=\"100%\"\r\n            rows=\"1fr 2fr 8fr\">\r\n            \r\n            <div className={style.backBtn}> \r\n                <img onClick={BackToLogin} alt=\"\" className={style.backImage} src={process.env.PUBLIC_URL + \"/LeftArrow.png\"} />\r\n            </div>\r\n\r\n            <div className={style.registerTitle}>Create a new account</div>\r\n            <RegisterForm createUser={props.createUser}/>\r\n        </AuthForm>\r\n    )\r\n}\r\n\r\nexport default Register;","import Register from \"./Register\"\r\nimport { createUser } from \"../../../redux/reducers/userReducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\"\r\nimport userSelectors from \"../../../redux/selectors/userSelectors\"\r\n\r\nconst RegisterComponent = (props) => {\r\n    return(\r\n        <Register\r\n        isFetching={props.isFetching} \r\n        isAuth={props.isAuth} \r\n        createUser={props.createUser}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: userSelectors.getIsAuth(state),\r\n        isFetching: userSelectors.getIsFetching(state),\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {createUser})\r\n)(RegisterComponent);\r\n","import { Switch, Route, Redirect } from \"react-router\";\r\nimport LoginContainer from \"./Login/LoginContainer\";\r\nimport RegisterContainer from \"./Register/RegisterContainer\";\r\n\r\nconst AuthRouter = () => {\r\n    return(\r\n    <Switch>\r\n        <Route exact path=\"/auth\">\r\n            <Redirect to=\"/auth/login\" />\r\n        </Route>\r\n        <Route exact path=\"/auth/login\">\r\n            <LoginContainer />\r\n        </Route>\r\n        <Route exact path=\"/auth/register\">\r\n            <RegisterContainer />\r\n        </Route>\r\n    </Switch>\r\n    );\r\n}\r\n\r\nexport default AuthRouter;","import { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        isAuth: state.user.isAuth\r\n    });\r\n}\r\n\r\nexport const withNoAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to=\"/auth/login\" />\r\n\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","import style from \"./ToDoList.module.css\";\r\n\r\nconst ToDoList = (props) => {\r\n\r\n    const setTaskStatus = (task) =>{\r\n        task.isDone = !task.isDone;\r\n        let newListData = JSON.parse(JSON.stringify(props.openList));\r\n\r\n        props.setOpenList(newListData);\r\n    };\r\n\r\n    const setNewTitle = (taskId, newTitle) =>{\r\n        let newListData = {...props.openList};\r\n\r\n        newListData.task.map( task => {\r\n            return task.id === taskId\r\n            ? task.name = newTitle: task;\r\n        })\r\n        props.setOpenList(newListData);\r\n    };\r\n\r\n    const setChangeTaskId = (id) => {\r\n        props.setChangeTaskId(id);\r\n    }\r\n\r\n    const RenderTasks = (data) => {\r\n\r\n        return(\r\n            data.tasks.map( task => (\r\n                <div className={style.task} key={ \"id\" in task ? task.id : `local${data.tasks.indexOf(task)}`}>\r\n                    <div className={style.taskCheckBox} onClick={() => { setTaskStatus(task) }}>\r\n                        <div className={`${style.taskCheckBoxEmpty} ${task.isDone && style.taskCheckBoxActive}`}></div>\r\n                    </div>\r\n                    <div className={style.taskTitle} onClick={() => setChangeTaskId(task.id)}>\r\n                        {props.changeTaskId === task.id \r\n                        ? <input \r\n                            type=\"text\" className={style.taskTitleInput} value={task.name} \r\n                            onChange={ (e) => setNewTitle(task.id, e.target.value)} autoFocus onBlur={() => setChangeTaskId(\"\")} placeholder=\"Task name\"/>\r\n                        : <div className={style.taskTitleContent}>{task.name}</div>}\r\n                    </div>\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n    \r\n    const saveChanges = () => {\r\n        props.updateList(props.openList.id, props.openList);\r\n        props.setIsOpenList(false);\r\n        setChangeTaskId(\"\");\r\n    }\r\n\r\n    const cancelChanges = () => {\r\n        props.setIsOpenList(false);\r\n        props.setOpenList({});\r\n    }\r\n\r\n    const addNewTask = () => {\r\n        let newTask = {\r\n            name: \"New task\",\r\n            isDone: false\r\n        }\r\n        let newListData = {...props.openList};\r\n        \r\n        newListData.task.push(newTask);\r\n\r\n        props.setOpenList(newListData);\r\n    }\r\n\r\n    return(\r\n        <div className={style.toDoList}>\r\n            <div className={style.title}>\r\n                <span className={style.titleContent}>{props.openList.name}</span>\r\n            </div>\r\n            <div className={style.tasks}>\r\n\r\n                {props.openList.task.length > 0 && <RenderTasks tasks={props.openList.task}/>}\r\n                {props.newTaskStorage.length > 0 && <RenderTasks tasks={props.newTaskStorage}/>}\r\n\r\n                <div className={style.tasksActionsBtns}>\r\n                    <button className={style.tasksCancelBtn}>CANCEL</button>\r\n                    <button className={style.tasksAddBtn} onClick={() => addNewTask()}>ADD</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.toDoListActionsBtns}>\r\n                <button className={style.toDoListCancelBtn} onClick={() => cancelChanges()}>CANCEL</button>\r\n                <button className={style.toDoListSaveBtn} onClick={ () => saveChanges()}>SAVE</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","const boardSelectors = {\r\n    getToDoList(state){\r\n        return state.board.toDoLists;\r\n    },\r\n    getIsOpenList(state){\r\n        return state.board.isOpenList;\r\n    },\r\n    getChangeListId(state){\r\n        return state.board.changeListId;\r\n    },\r\n    getSortBy(state){\r\n        return state.board.sortBy;\r\n    },\r\n    getOpenList(state){\r\n        return state.board.openList;\r\n    },\r\n    getChangeTaskId(state){\r\n        return state.board.changeTaskId;\r\n    },\r\n    getNewTaskStorage(state){\r\n        return state.board.newTaskStorage\r\n    }\r\n}\r\n\r\nexport default boardSelectors;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://recruitment.ultimate.systems/\"\r\n});\r\n\r\nexport default instance;","import instance from \"./instance/boardInstance\";\r\n\r\nconst configuration = () => {\r\n    return { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}`}}\r\n}\r\n\r\nexport const boardApi = {\r\n    getLists(sortBy){\r\n        return instance.get(\"to-do-lists\", {...configuration(), params : {_sort: sortBy}})\r\n        .then( response => { return response.data})\r\n        .catch( e => { console.log(e) });\r\n    },\r\n    updateList(id, changedList){\r\n        return instance.put(`to-do-lists/${id}`, changedList, configuration()).then( response => { return response.data})\r\n    },\r\n    createNewList(listData){\r\n        return instance.post(`to-do-lists/`, listData, configuration()).then( response => { return response.data})\r\n    },\r\n    removeList(listId){\r\n        return instance.delete(`to-do-lists/${listId}`, configuration()).then( response => { return response.data})\r\n    }\r\n}","import { boardApi } from \"../../api/boardApi\";\r\n\r\nconst SET_LISTS = \"SET_LISTS\";\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\r\nconst SET_IS_OPEN_LIST = \"SET_IS_OPEN_LIST\";\r\nconst SET_OPEN_LIST = \"SET_OPEN_LIST\";\r\nconst UPDATE_LIST_BY_ID = \"UPDATE_LIST_BY_ID\";\r\nconst SET_CHANGE_TASK_ID = \"SET_CHANGE_TASK_ID\";\r\nconst SET_NEW_TASK_SORAGE = \"SET_NEW_TASK_SORAGE\";\r\nconst SET_NEW_LIST = \"SET_NEW_LIST\";\r\nconst SET_CHANGE_LIST_ID = \"SET_CHANGE_LIST_ID\";\r\nconst REMOVE_LIST = \"REMOVE_LIST\";\r\nconst SET_SORT_BY = \"SET_SORT_BY\";\r\nconst RESET_BOARD_REDUCER = \"RESET_BOARD_REDUCER\";\r\n\r\nconst initialState = {\r\n    actualSort: \"\",\r\n    toDoLists: {},\r\n    isFetching: false,\r\n    isOpenList: false,\r\n    openList: {},\r\n    changeTaskId: \"\",\r\n    newTaskStorage: [],\r\n    changeListId: \"\",\r\n    sortBy: \"created_at\"\r\n}\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LISTS:\r\n            return {\r\n                ...state,\r\n                toDoLists: action.body\r\n            };\r\n        case SET_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.body\r\n            }\r\n        case SET_IS_OPEN_LIST:\r\n            return {\r\n                ...state,\r\n                isOpenList: action.body\r\n            }\r\n        case SET_OPEN_LIST:\r\n            return{\r\n                ...state,\r\n                openList: action.body\r\n            }\r\n        case UPDATE_LIST_BY_ID:\r\n            return{\r\n                ...state,\r\n                toDoLists: state.toDoLists.map( list => {\r\n                    return list.id === action.body.id ? action.body: list;\r\n                })\r\n            }\r\n        case SET_CHANGE_TASK_ID:\r\n            return{\r\n                ...state,\r\n                changeTaskId: action.body\r\n            }\r\n        case SET_NEW_TASK_SORAGE:\r\n            return {\r\n                ...state,\r\n                newTaskStorage: action.body\r\n            }\r\n        case SET_NEW_LIST:\r\n            return {\r\n                ...state,\r\n                toDoLists: state.toDoLists.concat([action.body])\r\n            }\r\n        case SET_CHANGE_LIST_ID:\r\n            return {\r\n                ...state,\r\n                changeListId: action.body\r\n            }\r\n        case REMOVE_LIST:\r\n            return {\r\n                ...state,\r\n                toDoLists: state.toDoLists.filter( list => list.id !== action.body)\r\n            }\r\n        case SET_SORT_BY:\r\n            return{\r\n                ...state,\r\n                sortBy: action.body\r\n            }\r\n        case RESET_BOARD_REDUCER:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default boardReducer;\r\n\r\n//Actions\r\nconst setLists = (lists) => ({type:SET_LISTS, body: lists});\r\nconst setFetchng = (isFetching) => ({type:SET_IS_FETCHING, body: isFetching});\r\nconst uppdateListById = (newListData) => ({type: UPDATE_LIST_BY_ID, body: newListData});\r\nconst setNewList = (newList) => ({type: SET_NEW_LIST, body: newList});\r\nconst removeListById = (listId) => ({type: REMOVE_LIST, body: listId});\r\nexport const setChangeTaskId = (taskId) => ({type: SET_CHANGE_TASK_ID, body: taskId});\r\nexport const setNewTaskStorage = (newTaskData) => ({type: SET_NEW_TASK_SORAGE, body: newTaskData});\r\nexport const setIsOpenList = (isOpenList) => ({type:SET_IS_OPEN_LIST, body: isOpenList});\r\nexport const setOpenList = (openListData) => ({type: SET_OPEN_LIST, body: openListData});\r\nexport const setChangeListId = (listId) => ({type: SET_CHANGE_LIST_ID, body: listId});\r\nexport const setsortBy = (sortBy) => ({type: SET_SORT_BY, body: sortBy});\r\nexport const resetBoardReducer = () => ({type: RESET_BOARD_REDUCER});\r\n\r\n//Middleware thunks\r\nexport const getLists = (sortBy) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetchng(true));\r\n        boardApi.getLists(sortBy)\r\n        .then( data => {\r\n            dispatch(setLists(data));\r\n            dispatch(setFetchng(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateList = (id, changedList) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetchng(true));\r\n        boardApi.updateList(id, changedList)\r\n        .then( data => {\r\n            dispatch(uppdateListById(data));\r\n            dispatch(setFetchng(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport const createNewList = (listData) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetchng(true));\r\n        boardApi.createNewList(listData)\r\n        .then( data => {\r\n            dispatch(setNewList(data));\r\n            dispatch(setFetchng(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeList = (listId) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetchng(true));\r\n        boardApi.removeList(listId)\r\n        .then( data => {\r\n            dispatch(removeListById(data.id));\r\n            dispatch(setFetchng(false));\r\n        })\r\n    }\r\n}","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport boardSelectors from \"../../../redux/selectors/boardSelectors\";\r\nimport { updateList, setIsOpenList, setOpenList, setChangeTaskId, setNewTaskStorage } from \"../../../redux/reducers/boardReducer.js\";\r\nimport React from \"react\";\r\n\r\nclass ToDoListComponent extends React.Component{\r\n    render(){\r\n\r\n        return(\r\n            <ToDoList {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isOpenList: boardSelectors.getIsOpenList(state),\r\n        openList: boardSelectors.getOpenList(state),\r\n        changeTaskId: boardSelectors.getChangeTaskId(state),\r\n        newTaskStorage: boardSelectors.getNewTaskStorage(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setIsOpenList, updateList, setOpenList, setChangeTaskId, setNewTaskStorage})\r\n)(ToDoListComponent)","import style from \"./Board.module.css\";\r\nimport { useState } from \"react\";\r\nimport ToDoListContainer from \"./ToDoList/ToDoListContainer\";\r\n\r\nconst Board = (props) => {\r\n\r\n    const sortOptions = {\r\n        name: \"name\",\r\n        creationDate: \"created_at\"\r\n    }\r\n\r\n    const sortOptionsView = {\r\n        name: \"Name\",\r\n        created_at: \"Creation date\"\r\n    }\r\n\r\n    let [curUpdatingListName, setCurUpdatingList] = useState(\"\");\r\n    let [isUpdating, setIsUpdating] = useState(false);\r\n    \r\n    let [isOpen, setOpen] = useState(false);\r\n\r\n    const openCloseSort = () => {\r\n        isOpen ? setOpen(false) : setOpen(true);\r\n    }\r\n\r\n    const updateListName = (listForChange) => {\r\n        listForChange.name = curUpdatingListName;\r\n        props.updateList(listForChange.id,  listForChange);\r\n        props.setChangeListId(\"\");\r\n        setCurUpdatingList(\"\");\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const stiilUpdatingName = (listName) => {\r\n        if(curUpdatingListName !== \"\"){\r\n            return curUpdatingListName;\r\n        }\r\n        else{  // Here will be use only if curUpdatingListName == \"\" or first time click on element to change\r\n            if(isUpdating){\r\n                return curUpdatingListName;\r\n            }\r\n            else{\r\n                return listName;\r\n            }\r\n        }\r\n    }\r\n\r\n    const startUpdatingListName = (list) => {\r\n        props.setChangeListId(list.id);\r\n        setIsUpdating(true);\r\n        setCurUpdatingList(list.name);\r\n    }\r\n\r\n    const RenderLists = () => {\r\n        return(\r\n            props.toDoLists.map( list => (\r\n                <div className={style.list} key={list.id} onDoubleClick={() => openList(list)}>\r\n                    <div className={style.listName} onClick={ () => startUpdatingListName(list)}>\r\n                        {props.changeListId === list.id \r\n                        ? <input className={style.listNameContentInput} autoFocus \r\n                            value={stiilUpdatingName(list.name)} onBlur={() => updateListName(list)}\r\n                            onChange={ (e) => setCurUpdatingList(e.target.value)}/>\r\n                        : <div className={style.listNameContent}>{list.name}</div>}\r\n                    </div>\r\n                    <div className={style.listCreationDate}>Created at: {list.created_at.split(\"T\")[0]}</div>\r\n                    <div className={style.listTaskTypes}>\r\n                        <div className={style.listTaskComplited}>Compleated: {list.task.filter( task => task.isDone === true).length}</div>\r\n                        <div className={style.listTaskUncomplited}>Uncomplited: {list.task.filter( task => task.isDone === false).length}</div>\r\n                        <div className={style.listTaskAll}>All: {list.task.length}</div>\r\n                    </div>\r\n                    <div className={style.removeList}>\r\n                        <img alt=\"\" src={process.env.PUBLIC_URL + \"/trash.png\"} onClick={ () => props.removeList(list.id)}/>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n\r\n    const openList = (listData) => {\r\n        props.setOpenList(JSON.parse(JSON.stringify(listData)));\r\n        props.setIsOpenList(true);\r\n        props.setChangeListId(\"\");\r\n    }\r\n\r\n    const addNewList = () => {\r\n        let newList = {\r\n            name: \"New List\",\r\n            task: [],\r\n        }\r\n        props.createNewList(newList);\r\n    }\r\n\r\n    const setSort = (sortBy) => {\r\n        props.setsortBy(sortBy)\r\n        props.getLists(sortBy);\r\n    }\r\n\r\n    return(\r\n        <div className={style.content}>\r\n            <div className={style.board}>\r\n                <div className={style.filters}>\r\n                    <div className={style.search}>\r\n                        <input type=\"text\" placeholder=\"Search\"></input>\r\n                    </div>\r\n                    <div className={style.sort} onClick={openCloseSort}>\r\n                        <div className={style.sortText}>{sortOptionsView[props.sortBy]}</div>\r\n                        <img className={`${style.sortImg} ${isOpen && style.additionalOpenSortImage}`} src={process.env.PUBLIC_URL + \"sortArrow.png\"}  alt=\"\"/>\r\n                        <div className={`${style.sortOptions} ${isOpen && style.additionalOpenSortOptions}`}>\r\n                            <div className={style.sortOption}>\r\n                                <div className={style.sortOptionContent} onClick={ () => setSort(sortOptions.name)}>{sortOptionsView.name}</div>\r\n                            </div>\r\n                            <div className={style.sortOption}>\r\n                                <div className={style.sortOptionContent} onClick={ () => setSort(sortOptions.creationDate)}>{sortOptionsView.created_at}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={style.lists}>\r\n                    {props.toDoLists.length > 0 && <RenderLists />}\r\n                </div>\r\n\r\n                <div className={style.boardAdd} onClick={ () => addNewList()}>\r\n                    <img className={style.boardAddImg} alt=\"\" src={process.env.PUBLIC_URL + \"/plusOrange.png\"}/>\r\n                </div>\r\n            </div>\r\n            {props.isOpenList && <ToDoListContainer />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withNoAuthRedirect } from \"../../hoc/withNoAuthRedirect\";\r\nimport Board from \"./Board\";\r\nimport boardSelectors from \"../../redux/selectors/boardSelectors\";\r\nimport { getLists, setOpenList, setIsOpenList, createNewList,\r\n    setChangeListId, updateList, removeList, setsortBy } from \"../../redux/reducers/boardReducer.js\";\r\n\r\nclass BoardComponent extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.getLists(this.props.sortBy);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Board {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toDoLists: boardSelectors.getToDoList(state),\r\n        isOpenList: boardSelectors.getIsOpenList(state),\r\n        changeListId: boardSelectors.getChangeListId(state),\r\n        sortBy: boardSelectors.getSortBy(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withNoAuthRedirect,\r\n    connect(mapStateToProps, {getLists, setIsOpenList, setOpenList, \r\n        createNewList, setChangeListId, updateList, removeList, setsortBy})\r\n)(BoardComponent);","import { Route, Switch } from \"react-router\";\r\nimport BoardContainer from \"./BoardContainer\";\r\nimport ToDoList from \"./ToDoList/ToDoList\";\r\n\r\nconst BoardRouter = () => {\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/board\" component={BoardContainer}/>\r\n                <Route exact path=\"/board/list/:id\" component={ToDoList}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardRouter;","import style from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n\r\n    const logout = () => {\r\n        props.resetUserReducer();\r\n        props.resetBoardReducer();\r\n    }\r\n\r\n    return(\r\n        <div className={style.header}>\r\n            <div className={style.title}>ToDo-List</div>\r\n            {props.isAuth && <img className={style.loginStatus} src={process.env.PUBLIC_URL + \"/logout.png\"} alt=\"\" \r\n            onClick={ () => logout()}/> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Header from \"./Header\";\r\nimport { setIsAuth, resetUserReducer } from \"../../redux/reducers/userReducer\";\r\nimport { resetBoardReducer } from \"../../redux/reducers/boardReducer\";\r\n\r\nclass HeaderComponent extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isAuth: state.user.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setIsAuth, resetUserReducer, resetBoardReducer})\r\n)(HeaderComponent);","import styled from 'styled-components';\r\n\r\nconst AppContainer = styled.div`\r\n    background-color: ${ props => props.backgroundColor};\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: grid;\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: 10% 90%;\r\n`;\r\n\r\nexport default AppContainer;","import { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport AuthRouter from './Auth/AuthRouter';\r\nimport BoardRouter from './Board/BoardRouter';\r\nimport HeaderContainer from './Header/HeaderContainer';\r\nimport AppContainer from './Library/AppContainer.style';\r\n\r\nfunction App() {\r\n  return (\r\n    <AppContainer>\r\n      <Router>\r\n    <HeaderContainer />\r\n      <Switch>\r\n      <Route exact path=\"/Ultimate-Systems-Task\">\r\n          <Redirect to=\"/auth\"/>\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/board\"/>\r\n        </Route>\r\n        <Route path=\"/auth\" component={AuthRouter}/>\r\n        <Route path=\"/board\" component={BoardRouter}/>\r\n      </Switch>\r\n    </Router>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport userReducer from \"./reducers/userReducer.js\";\r\nimport boardReducer from \"./reducers/boardReducer.js\";\r\n\r\nlet reducers = combineReducers({\r\n    user: userReducer,\r\n    board: boardReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport \"./index.css\";\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}